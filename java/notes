定义切入点表达式 execution(* com.sample.service.impl..*.*(..))
execution()是最常用的切点函数，其语法如下所示：
整个表达式可以分为五个部分：
(1)、execution(): 表达式主体。
(2)、第一个*号：表示返回类型，*号表示所有的类型。
(3)、包名：表示需要拦截的包名，后面的两个句点表示当前包和当前包的所有子包，com.sample.service.impl包、子孙包下所有类的方法。
(4)、第二个*号：表示类名，*号表示所有的类。
(5)、*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数






笔试面试全英文。电话面试，一男一女两个面试官，问了好多。override overload, OO design, reference, pointer, call by reference, call by pointer, udp tcp, 5-bit addressing space, overflow, process thread, virtual, virtual, what's inherit?, how to implement virtual function, add element to linked list space complexity? quick sort, how to avoid memory leak? what's deadlock?prime number?........由于太吵，其中好几个问题，都让对方重复了几遍，有一次我明显感觉到对方有点不爽了。我只能sorry啦。最后问我有没有什么问题。当时被手机信号和路边噪音搞得很烦躁了，自我感觉好像大部分都答上来了，但是英语表达很乱，不知道自己能不能通过这一轮（其它各公司不管是笔试面试完之后，成于不成我都能估算出来。唯独大摩，除了笔试完我有把握能通过，后面的各个环节结束后，我都只有fifty-fifty的把握）。我就问how is the performance of me today？对方女面试官突然开心的大笑了。是我问得太直接了吧。呵呵，气氛是好了不少。不过她说什么，我不听清，我只是在想，我下一个该问什么问题。哈哈。然后我就问：I know little about finance, does that mean I have less opportunity to work in Morgan Stanley?对方安慰说没关系。以后会教你的。然后我就问global cooperation的问题，工作语言的问题。
一周后，看到邮件，开头是Morgan Stanley，有点激动和恐惧，因为我想摩根这样专业的公司即使考查了我不合格，也许也会给我发拒信的。但是又看到有附件，我想拒信应该不会有附件的吧。哈哈，应该有戏。打开一看，竟然邀请19号参加上海的final round in the Assessment Center。激动。还有9天时间，我要好好准备，抓住机会！
onsite那天各个面试官进屋喊名字，我的第一面技术面是一个非大陆人和一个印度人，他们先自我介绍了一下，当然我完全没有记住，在那种情况下，我觉得自己没有什么记忆力，除了问过我的一些问题，当然有很多问题我现在也记不清了，其实对后来人来说，具体的问题是什么也不是那么重要了，相同的问题不太可能在明年或者后年被问到了，关键是了解他们的考察范围和深入程度。非大陆人问我tcp,udp区别，然后给了我一个multicast场景,让我查故障。然后问我用过什网络分析仪，我说wireshark, Fluke device,遂又给了我另外一个网络场景，让我用网络分析仪排查故障，考察了网络传输过程，协议格式，DF,MTU,ACL,PROXY。然后又问我我参加的黑客大赛的比赛情况，问我如何防范phishing等。接下来问我Linux下的/proc是什么，如何盗取root权限而不为人知，解释sticky bit,等等，记不清了。印度人想问我设计模式方面的东西，我直接说我不会。所以印度人就再没有问我问题。印度老大非常的高挑帅气，很像我的高中化学老师徐明奎。他们的时间观念非常强，每轮面试时间45分钟，然后休息5到10分钟，喝点水或者饮料，吃点食物进入下一轮。每轮还剩10分钟的时间，计时员会来提醒。
第二轮考察算法加程序设计，在白板上写程序，一群士兵（标记为1到N）绕成一个圈，每次从1开始,kill掉顺时针下一个数，几轮之后只剩下一个数，即为胜者，写函数F(n),返回胜者。然后考察操作系统，deadlock, semaphore与lock的区别，PV操作的实现方法，how to avoid deadlock, how to schedule processes等等。
第三轮考察算法加C++，C++部分有点inside C++的味道。
最后一轮群面，8个人讨论如何使摩根公司的招聘更有成效，更能吸引住优秀的人才。人多嘴杂，再加上用英语讨论，大家更为激动，而且hr说，面试官是根据面试者的发言来打分的，如果你不说话，我们就无法给分。所以大家都争着表现，我基本上没说上几句话。后来分成了两组，我才有机会说了几句，组中有一个人明显想要当leader，几度想控制讨论。这一轮我虽然表现冷静，没有激动，但是效果也一般。
出了摩根大楼，累得走路跟僵尸一样坐21：00的高铁回了南京。
回南京后，过了两天，正好是周一。下午15：16的时候接到摩根了电话，说10分钟后再电面一轮技术。我又激动了。这回主要是问shell编程和网络，无比的细节。shell中问了如何获取当前运行shell script的PID,如何获取上一个命令的PID,给出了几个具体股票交易数据格式文件，如何过滤和处理文本，就是awk,sed，sort, uniq,head,tail,grep,正则表达式那一套，等等。网络关于tcp状态机的问题没答上来，挂完电话翻书，正是每次看书必忽略的那一小节。唉，看书要仔细，不可恐惧某一章节啊，其实看完就知道，也就那么一回事儿。问他是不是每个人都回再次收到电面，对方说：no, you're a special one.一激动，ok, thank you, byebye了。
周三的时候，hr 打来了电话，问我有了哪些offer，对方待遇怎么样，有没有逼签，让我不要急着签，等着大摩，会在周五的时候给我消息。我一激动。结果第二天下午他们就正式通知给我offer了。大摩终于算是搞定了。
p.s. 从求职的过程来看，大摩是非常高效和专业的公司。






String[] arr = new String[] {"str1", "str2"};
List<String> list = Arrays.asList(arr);

int size = list.size();
String[] arr = (String[])list.toArray(new String[size])


2 内存泄露
3 overload和override的区别
4 常用的设计模式
5 UDP和TCP的区别
6 垃圾回收
7 数据库
8 进程与线程的区别
9 常用排序，复杂度
算法题： 一个文件里有很多单词，如何找出出现频率最高的十个单词





差不多九月中旬做完IKM在线测试，包括五个部分。十月下旬接到预约电面电话，并且强调全英文。先对着简历问到了项目经验，然后就开始细问作为项目负责人的项目，项目中有多少人，如何分工，项目遇到过什么难题，如何克服的,如何构造数据库。接着对着简历开问，项目中用到过什么设计模式，具体解释一下；数据结构:栈和队列的区别；算法：描述一下快排的过程 ，描述如何返回两个链表的交点；C++:虚表的形成过程，拷贝构造函数和重载运算符；SQL：主键和外键的区别。后来描述了一个开放题，让你听完后给出一个solution。


多线程
数据库 join inner outer
　What is Object Oriented programming
What is inheritance?、interface



我在摩根士丹利网站上提交过简历以后，就收到了他提前打过来预约电话面试，那时候我还刚好在公司上班，接到电话还是比较开心的，摩根IT一直是我很想去的一个部门，感觉特别高大上的样子。

在12点30分就接到了一个面试官给我打来的面试电话，开始简单说了一下，然后就和我确认是否可以开始全部用英文进行交流，我调整了一下后，觉得可以了，在公司找了一个比较安静的地方，就开始电话面试。

面试官说，一共是10个简答题，1个算法题。然后就开始一个个的问。

1、饥饿和死锁有什么区别。

这道题是比较经典的一个题目，也看的比较多了，我回答是死锁是因为临界资源调度出现问题，导致系统出现环形结构，造成系统崩溃。而饥饿是因为调度算法的问题，导致有进程一直无法取得资源。本质上区别就是死锁是破坏性的，而饥饿只是某些进程始终无法取得资源。

2、为什么基类要定义虚析构函数。

这个也是比较经典的问题。涉及到多态的问题。什么是多态这里就不再细讲了，感兴趣的同学可以查看一下本版块的其他文章，里面有关于C++多态的详细解释。如果基类不定义虚函数会怎么样？如果没有把基类的析构函数定义为虚析构函数，那么在基类指针指向子类对象的时候，调用析构函数的时候，仅仅会调用基类的析构函数，会释放基类的资源，而不会释放子类的资源。如果子类采用了new生成的空间，那么不会得到释放，因此需要把基类的析构函数定义成为虚析构函数。

3、多态有什么用。

这个是C++的基本概念，我表示我之前也不怎么了解。C++多态我的理解，就是同一类物品，有其本身的特殊属性。多态是用于在对同一个类进行继承的时候，根据继承的类的不同特性，延伸出不同的方法。

举个例子来说，狗和猫都继承自动物，并且都能叫，但是叫声不同，狗有自己的“汪汪”，猫有自己的“喵喵”。那么这个就是一种多态概念。

4、什么是内存泄露。

内存泄露就是手工申请了内存，但是没有手工释放。在高级语言JAVA和C#中，本身就有回收机制，也就是你只要使用对象就可以了，什么时候释放不用程序员管。但是在C和C++中，支持程序员手工申请空间，但是如果是手工申请空间，必须要在某一个地方手工释放空间。如果在程序任何一个地方都没有释放空间，就会导致内存泄露。在C中申请内存的函数是malloc，在C++中申请内存的关键字是new。

5、栈和队列有什么区别。

这个也是经典题，当然也是比较简单的。

最主要的特点是队列先进先出，栈先进后出。

6、如何判断C++的返回值是0还是错误。

我回答可以采用两个方法，一个是返回值，一个是全局变量。为什么要用两个，单单用一个返回值不行吗？不行，比如如果只用返回值，如何表示返回的是结果，还是错误？如果返回的都是0，那么如何知道，这个0是程序执行正确返回的0，还是表示失败，产生错误？解决方案就是在设置一个全局变量，当全局变量为1的时候，表示程序执行正确，返回值就是程序正确的返回结果。如果全局变量为0的时候，就表示程序出错，程序返回的任何值都没有意义。

我们只要在可能发生错误的地方，改变全局变量的值就可以了。

但是面试官和我说，为什么会用这个方案，我说我看到微软都是这样的机制，然后他笑笑说，其实微软也不一定是对的。

7、递归是什么
递归就是自身调用自身。

8、数据库的normaliztion是什么。

normaliztion 就是规范化处理，也就是把数据规范成为符合关系型数据库的三个范式。可以用于规范化数据，节省空间。

9、线程和进程有什么区别。

线程轻量级，进程重量级。

线程拥有少量的资源，进程拥有更多的资源。

线程调度开销小，进程调度开销大。

10、快排怎么选择基准。

我开始还没有听懂他说的英语单词的基准，我只能说i am sorry,i didnt hear it clearly,can you repeat it again?他又重复了一下，我还是没有听懂。

但是我猜到了应该是什么，就回答说，randomly or orderly。哈哈，这个是万能药。实际上就是如何找一个划分基准。一般有两种方法，一个是每次找第一个，另外一个是每次取随机一个数作为划分基准。其中采用随机划分效果会更好。

1、给定一个数组和整数S，求得a+b=S。

2、根据上述题目给出用例。

这个题目我回答错了。我开始回答分别从中间取两个数，然后判断这两个数的和与S的的大小，然后相应的移动指针。（我后面发现我这个算法是错的，应该分别从首位取两个数来进行判断）。他提示我，数组是无序的，我想，如果是无序的话，就先进行一个排序，排序的时间复杂度是O(nlog n)，然后再使用我上面的算法，时间复杂度是O(n+nlog n)=O(nlog n)。他问我有没有更好的算法，我说没有了。

他问我还有什么问题。一般公司貌似都有这个环节，在面试结束后，会问你有什么想知道，这个情况，最好表示一下，自己对公司感兴趣。所以我问了一个问题，就是摩根IT一般用什么数据库。

他说公司用得最多的是sybase和oracle，但是其他数据库一般也会用到，比如非关系的mongodb还有mysql等。
